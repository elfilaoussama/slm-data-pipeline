{"id":"00000000-0000-0000-0000-000000000301","task":"refactor","language":"python","provenance":{"repo_full_name":"sample/repo","source":"github","clone_url":"https://github.com/sample/repo","default_branch":"main","commit_sha":"deadbeef","commit_date":"2025-01-01T00:00:00","file_path":"src/foo.py","lines":[1,10],"license_spdx":"MIT","license_text":"","scan_tool_versions":{"scancode":"x","semgrep":"x"},"scan_timestamp":"2025-01-01T00:00:00","semantic_score":0.9},"pre":"def add(x,y):\n    return x+y\n","post":"def add_numbers(x,y):\n    return x+y\n","diff":"- def add(x,y):\n+ def add_numbers(x,y):\n","refactor_type":"rename","verified":false,"synthetic":true}
{"id":"00000000-0000-0000-0000-000000000302","task":"refactor","language":"python","provenance":{"repo_full_name":"org/lib","source":"gitlab","clone_url":"https://gitlab.com/org/lib","default_branch":"main","commit_sha":"00112233","commit_date":"2025-01-03T00:00:00","file_path":"pkg/util.py","lines":[10,40],"license_spdx":"MIT","license_text":"","scan_tool_versions":{"scancode":"x","semgrep":"x"},"scan_timestamp":"2025-01-03T00:00:00","semantic_score":0.75},"pre":"def area(w,h):\n    return w*h\n","post":"def area(rect):\n    w,h = rect\n    return w*h\n","diff":"- def area(w,h):\n-     return w*h\n+ def area(rect):\n+     w,h = rect\n+     return w*h\n","refactor_type":"signature-change","verified":false,"synthetic":true}
{"id":"00000000-0000-0000-0000-000000000303","task":"refactor","language":"python","provenance":{"repo_full_name":"sample/graph","source":"github","clone_url":"https://github.com/sample/graph","default_branch":"main","commit_sha":"44556677","commit_date":"2025-01-04T00:00:00","file_path":"graph/bfs.py","lines":[1,60],"license_spdx":"BSD-3-Clause","license_text":"","scan_tool_versions":{"scancode":"x","semgrep":"x"},"scan_timestamp":"2025-01-04T00:00:00","semantic_score":0.85},"pre":"def bfs(g,s):\n    # inline queue\n    q=[s]\n    ...\n","post":"from collections import deque\n\n def bfs(g,s):\n    q=deque([s])\n    ...\n","diff":"+ from collections import deque\n- q=[s]\n+ q=deque([s])\n","refactor_type":"extract","verified":false,"synthetic":true}
{"id":"00000000-0000-0000-0000-000000000304","task":"refactor","language":"python","provenance":{"repo_full_name":"alpha/beta","source":"github","clone_url":"https://github.com/alpha/beta","default_branch":"main","commit_sha":"a1a2a3a4","commit_date":"2025-01-08T00:00:00","file_path":"alpha/f.py","lines":[1,20],"license_spdx":"MIT","license_text":"","scan_tool_versions":{"scancode":"x","semgrep":"x"},"scan_timestamp":"2025-01-08T00:00:00","semantic_score":0.78},"pre":"def process(xs):\n    out=[]\n    for x in xs:\n        out.append(x*x)\n    return out\n","post":"def process(xs):\n    return [x*x for x in xs]\n","diff":"- out=[]\n- for x in xs:\n-     out.append(x*x)\n- return out\n+ return [x*x for x in xs]\n","refactor_type":"simplify","verified":false,"synthetic":true}
{"id":"00000000-0000-0000-0000-000000000305","task":"refactor","language":"python","provenance":{"repo_full_name":"x/y","source":"github","clone_url":"https://github.com/x/y","default_branch":"main","commit_sha":"ccddeeff","commit_date":"2025-01-06T00:00:00","file_path":"x/y.py","lines":[1,50],"license_spdx":"Apache-2.0","license_text":"","scan_tool_versions":{"scancode":"x","semgrep":"x"},"scan_timestamp":"2025-01-06T00:00:00","semantic_score":0.71},"pre":"def join(a,b,sep=\", \"):\n    return a + sep + b\n","post":"def join(a,b,sep=\", \"):\n    return f"{a}{sep}{b}"\n","diff":"- return a + sep + b\n+ return f\"{a}{sep}{b}\"\n","refactor_type":"modernize","verified":false,"synthetic":true}
{"id":"00000000-0000-0000-0000-000000000306","task":"refactor","language":"python","provenance":{"repo_full_name":"org/mod","source":"gitlab","clone_url":"https://gitlab.com/org/mod","default_branch":"main","commit_sha":"11223344","commit_date":"2025-01-07T00:00:00","file_path":"m/util.py","lines":[1,32],"license_spdx":"BSD-2-Clause","license_text":"","scan_tool_versions":{"scancode":"x","semgrep":"x"},"scan_timestamp":"2025-01-07T00:00:00","semantic_score":0.73},"pre":"def head(xs,n):\n    return xs[:n]\n","post":"def take(xs,n):\n    return xs[:n]\n","diff":"- def head(xs,n):\n+ def take(xs,n):\n","refactor_type":"rename","verified":false,"synthetic":true}
{"id":"00000000-0000-0000-0000-000000000307","task":"refactor","language":"python","provenance":{"repo_full_name":"net/xyz","source":"github","clone_url":"https://github.com/net/xyz","default_branch":"main","commit_sha":"c3c4c5c6","commit_date":"2025-01-10T00:00:00","file_path":"n/x.py","lines":[1,30],"license_spdx":"MIT","license_text":"","scan_tool_versions":{"scancode":"x","semgrep":"x"},"scan_timestamp":"2025-01-10T00:00:00","semantic_score":0.74},"pre":"def rev(s):\n    return s[::-1]\n","post":"def reverse(s):\n    return s[::-1]\n","diff":"- def rev(s):\n+ def reverse(s):\n","refactor_type":"rename","verified":false,"synthetic":true}
{"id":"00000000-0000-0000-0000-000000000308","task":"refactor","language":"python","provenance":{"repo_full_name":"p/q","source":"gitlab","clone_url":"https://gitlab.com/p/q","default_branch":"main","commit_sha":"d4d5d6d7","commit_date":"2025-01-11T00:00:00","file_path":"p/q.py","lines":[1,40],"license_spdx":"MIT","license_text":"","scan_tool_versions":{"scancode":"x","semgrep":"x"},"scan_timestamp":"2025-01-11T00:00:00","semantic_score":0.72},"pre":"def uniq(xs):\n    return list(set(xs))\n","post":"from itertools import groupby\n\n def uniq(xs):\n    return [k for k,_ in groupby(sorted(xs))]\n","diff":"+ from itertools import groupby\n- return list(set(xs))\n+ return [k for k,_ in groupby(sorted(xs))]\n","refactor_type":"extract","verified":false,"synthetic":true}
{"id":"00000000-0000-0000-0000-000000000309","task":"refactor","language":"python","provenance":{"repo_full_name":"s/t","source":"github","clone_url":"https://github.com/s/t","default_branch":"main","commit_sha":"e5e6e7e8","commit_date":"2025-01-12T00:00:00","file_path":"s/t.py","lines":[1,22],"license_spdx":"MIT","license_text":"","scan_tool_versions":{"scancode":"x","semgrep":"x"},"scan_timestamp":"2025-01-12T00:00:00","semantic_score":0.81},"pre":"def take(xs,n):\n    return xs[:n]\n","post":"def take(xs, n: int):\n    return xs[:n]\n","diff":"- def take(xs,n):\n+ def take(xs, n: int):\n","refactor_type":"type-hint","verified":false,"synthetic":true}
{"id":"00000000-0000-0000-0000-00000000030a","task":"refactor","language":"python","provenance":{"repo_full_name":"k/l","source":"gitlab","clone_url":"https://gitlab.com/k/l","default_branch":"main","commit_sha":"f6f7f8f9","commit_date":"2025-01-13T00:00:00","file_path":"k/l.py","lines":[1,22],"license_spdx":"MIT","license_text":"","scan_tool_versions":{"scancode":"x","semgrep":"x"},"scan_timestamp":"2025-01-13T00:00:00","semantic_score":0.7},"pre":"def head1(xs):\n    if not xs: return None\n    return xs[0]\n","post":"def first(xs):\n    if not xs:\n        return None\n    return xs[0]\n","diff":"- def head1(xs):\n+ def first(xs):\n+     if not xs:\n+         return None\n  return xs[0]\n","refactor_type":"rename","verified":false,"synthetic":true}
{"id":"00000000-0000-0000-0000-00000000030b","task":"refactor","language":"python","provenance":{"repo_full_name":"k/m","source":"gitlab","clone_url":"https://gitlab.com/k/m","default_branch":"main","commit_sha":"f7f8f9fa","commit_date":"2025-01-14T00:00:00","file_path":"k/m.py","lines":[1,22],"license_spdx":"Apache-2.0","license_text":"","scan_tool_versions":{"scancode":"x","semgrep":"x"},"scan_timestamp":"2025-01-14T00:00:00","semantic_score":0.7},"pre":"def last(xs):\n    return xs[-1]\n","post":"def last(xs):\n    try:\n        return xs[-1]\n    except IndexError:\n        return None\n","diff":"+ try:\n+     return xs[-1]\n+ except IndexError:\n+     return None\n","refactor_type":"robustness","verified":false,"synthetic":true}
{"id":"00000000-0000-0000-0000-00000000030c","task":"refactor","language":"python","provenance":{"repo_full_name":"k/n","source":"gitlab","clone_url":"https://gitlab.com/k/n","default_branch":"main","commit_sha":"f8f9fafa","commit_date":"2025-01-15T00:00:00","file_path":"k/n.py","lines":[1,22],"license_spdx":"Apache-2.0","license_text":"","scan_tool_versions":{"scancode":"x","semgrep":"x"},"scan_timestamp":"2025-01-15T00:00:00","semantic_score":0.7},"pre":"def avg(xs):\n    return sum(xs)/len(xs)\n","post":"from statistics import mean\n\n def avg(xs):\n    return mean(xs)\n","diff":"+ from statistics import mean\n- return sum(xs)/len(xs)\n+ return mean(xs)\n","refactor_type":"extract","verified":false,"synthetic":true}
{"id":"00000000-0000-0000-0000-00000000030d","task":"refactor","language":"python","provenance":{"repo_full_name":"k/o","source":"gitlab","clone_url":"https://gitlab.com/k/o","default_branch":"main","commit_sha":"f9fafa0a","commit_date":"2025-01-16T00:00:00","file_path":"k/o.py","lines":[1,22],"license_spdx":"BSD-2-Clause","license_text":"","scan_tool_versions":{"scancode":"x","semgrep":"x"},"scan_timestamp":"2025-01-16T00:00:00","semantic_score":0.7},"pre":"def median(xs):\n    xs=sorted(xs)\n    n=len(xs)\n    return xs[n//2] if n%2 else (xs[n//2-1]+xs[n//2])/2\n","post":"from statistics import median as _median\n\n def median(xs):\n    return _median(xs)\n","diff":"+ from statistics import median as _median\n- xs=sorted(xs) ...\n+ return _median(xs)\n","refactor_type":"extract","verified":false,"synthetic":true}
